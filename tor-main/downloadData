#!/bin/bash

#Code to find number of unique IP addresses of tor over 24 hours of first day of month
#Differs from unique_Tor because it 
    #- Uses parallel programming
    #- Saves downloaded data
#Find number of unique tor relays over 24 hours (number of relays are updated every hour
#so compile list of unique relays over 24 hours)
#https://collector.torproject.org/archive/relay-descriptors/consensuses/
#use Server-Descriptors to extract IP addresses

if [ $# != 4 ]
then
    echo "Please follow the format of startMonth startYear endMonth endYear"
    exit
elif [ $1 -lt 1 ] || [ $1 -gt 12 ] || [ $3 -lt 1 ] || [ $3 -gt 12 ]
then
    echo "Give a valid month between 01 to 12"
    exit
elif [ $2 -le 2007 ] && [ $1 -lt 11 ]
then
    echo "No data before 11, 2007"
    exit
fi

#Save user arguments
echo "Finding the unique number of Tor IPs from $1, $2 to $3, $4"
startMonth=$1
startYear=$2
endMonth=$3
endYear=$4

#Create file to save results, check if file w/ results exists
if [[ -f results-$2$formattedStartMonth-$4$formattedEndMonth.txt ]]
then
    echo "A file with this data exists already."
    read -p "Would you like to continue? y/n: " uservar
    if [ $uservar != "y" ]; then 
        echo "Ending code."  
        exit 0
    fi  
fi
> results-${2}${formattedStartMonth}-${4}${formattedEndMonth}.txt

downloadFileStart="https://collector.torproject.org/archive/relay-descriptors/consensuses/"

> torFileZip.txt
> torFilesZipped.txt
#Downloading all data from tor project.
#Creating variable contaning all URLs to download
while [ $startYear -lt $endYear ] || [ $startMonth -le $endMonth -a $startYear == $endYear ]
do
    if [ ${#startMonth} -lt 2 ]
        then formattedStartMonth="0$startMonth"
        else formattedStartMonth="$startMonth"
    fi

    #download data with tor IPs and output to currentFile
    downloadFileEnd="consensuses-${startYear}-${formattedStartMonth}.tar.xz"
    downloadFileName=${downloadFileStart}${downloadFileEnd}
    
    #save urls to file, torURLs.txt
    #echo $downloadFileName >> torURLs.txt
    torFileZip="consensuses-${startYear}-${formattedStartMonth}.tar.xz"
    torDirectory="consensuses-${startYear}-${formattedStartMonth}"

    echo "$torDirectory" 
    if [[ ! -d $torDirectory ]]
    then
        echo "Downloading"
        curl $downloadFileName --output $torFileZip &
        echo $torFileZip >> torFilesZipped.txt
    else   
        echo "Directory already downloaded"
    fi
    
    ((startMonth++))
    if [ $startMonth = 13 ]
    then
        wait
        ((startYear++))
        ((startMonth=1))
    fi
done
wait

echo "Unzipping any tor files"
#cat torFilesZipped.txt | xargs -n 1 -P 8 tar xf
#TODO: run parallel
xargs -P 6 -I{} tar xf "{}" < torFilesZipped.txt

#mv consensuses-20* -t 'consensuses/'
xargs -I{} rm -r "{}" < torFilesZipped.txt

rm torFilesZipped.txt

startMonth=$1
startYear=$2
echo "Finding data from CAIDA for $1, $2 to $3, $4"
#Downloading all data from CAIDA.
while [ $startYear -lt $endYear ] || [ $startMonth -le $endMonth -a $startYear == $endYear ]
do
    if [ ${#startMonth} -lt 2 ]
        then formattedStartMonth="0$startMonth"
        else formattedStartMonth="$startMonth"
    fi
    #download IP to AS mappings from caida
    currentFile="caidaData/caidaData${startYear}-${formattedStartMonth}"
    currentFileZip="caidaData/caidaData${startYear}-${formattedStartMonth}.gz"

    if [[ ! -f $currentFile ]]
    then
        start_URL="https://publicdata.caida.org/datasets/routing/routeviews-prefix2as/${startYear}/${formattedStartMonth}/"
        curl $start_URL --output html_file
        end_URL=$(python3 findURL.py $formattedStartMonth $startYear) #Use BeautifulSoup in Python to get right address
        URL=${start_URL}${end_URL}
        curl ${URL} --output $currentFileZip &
        caidaArray+=($currentFileZip)
        #echo $currentFileZip >> caidaFilesZipped.txt
    else
        echo "Caida data exists"
    fi
    echo "Got caida data"
    ((startMonth++))
    if [ $startMonth = 13 ]
    then
        wait
        ((startYear++))
        ((startMonth=1))
    fi
done
wait
if [ -f html_file ]; then rm html_file; fi
if [ -f torFileZip.txt ]; then rm torFileZip.txt; fi
#Gzip -d *.gz
#rm *.gz

#xargs -P 6 Gzip < caidaFilesZipped.txt
#xargs -I{} rm -r "{}" < caidaFilesZipped.txt

#rm caidaFilesZipped.txt

echo "Unzipping data from CAIDA for $1, $2 to $3, $4"
for i in "${caidaArray[@]}"
    do
        echo "Unzipping file"
        gzip -d $i
        #rm $i
    done


echo "Data download complete"
